# Test against the latest version of this Node.js version
environment:
  nodejs_version: "6"

init:
  - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;%PATH%
  - SET COMPOSER_NO_INTERACTION=1
  - SET PHP=1 # This var is connected to PHP install cache
  - SET ANSICON=121x90 (121x90)

# Install scripts. (runs after repo cloning)
install:
  - IF EXIST c:\tools\php (SET PHP=0) # Checks for the PHP install being cached
  - ps: appveyor-retry cinst --params '""/InstallDir:C:\tools\php""' --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php_ver_target | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')
  - cd c:\tools\php
  - IF %PHP%==1 copy php.ini-production php.ini /Y
  - IF %PHP%==1 echo date.timezone="UTC" >> php.ini
  - IF %PHP%==1 echo extension_dir=ext >> php.ini
  - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini
  - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini
  - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini
  - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat
  - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar
  - cd c:\projects\php-project-workspace
  - IF %dependencies%==lowest appveyor-retry composer update --prefer-lowest --no-progress --profile -n
  - IF %dependencies%==current appveyor-retry composer install --no-progress --profile
  - IF %dependencies%==highest appveyor-retry composer update --no-progress --profile -n
  - composer show

  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  # yarn supports
  - yarn install

cache:
  - '%LOCALAPPDATA%\Composer\files -> composer.lock'
  - composer.phar
  - C:\ProgramData\chocolatey\bin -> .appveyor.yml
  - C:\ProgramData\chocolatey\lib -> .appveyor.yml
  - c:\tools\php -> .appveyor.yml
  - node_modules
  - "%LOCALAPPDATA%/Yarn"

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  - yarn --version
  # run tests
  - yarn test

# Don't actually build.
build: off

# Branches
branches:
  only:
  - develop
skip_tags: true
